* = $c000$C000:  ;  ic bus encoding table 00 80 20 A0 40 C0 60 E0 10 90 30 B0 50 D0 70 F0 08 88 28 A8 48 C8 68 E8 18 98 38 B8 58 D8 78 F8  02 82 22 A2 42 C2 62 E2 12 92 32 B2 52 D2 72 F2  0A 8A 2A AA 4A CA 6A EA 1A 9A 3A BA 5A DA 7A FA  04 84 24 A4 44 C4 64 E4 14 94 34 B4 54 D4 74 F4  0C 8C 2C AC 4C CC 6C EC 1C 9C 3C BC 5C DC 7C FC  06 86 26 A6 46 C6 66 E6 16 96 36 B6 56 D6 76 F6 0E 8E 2E AE 4E CE 6E EE 1E 9E 3E BE 5E DE 7E FE  01 81 21 A1 41 C1 61 E1 11 91 31 B1 51 D1 71 F1  09 89 29 A9 49 C9 69 E9 19 99 39 B9 59 D9 79 F9  03 83 23 A3 43 C3 63 E3 13 93 33 B3 53 D3 73 F3  0B 8B 2B AB 4B CB 6B EB 1B 9B 3B BB 5B DB 7B FB  05 85 25 A5 45 C5 65 E5 15 95 35 B5 55 D5 75 F5  0D 8D 2D AD 4D CD 6D ED 1D 9D 3D BD 5D DD 7D FD  07 87 27 A7 47 C7 67 E7 17 97 37 B7 57 D7 77 F7  0F 8F 2F AF 4F CF 6F EF 1F 9F 3F BF 5F DF 7F FF$C100:  ;  raster line timings? 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F  0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F  0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00  0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00       0F 0F 0F 0F 0F 0F 00 00 0F 0F 0F 0F 0F 0F 00 00      $C200:   0F 0F 0F 0F 0F 0F 00 00         $C208:  4C 54 C3   jmp LOADSECTOR(c354); LOAD SECTOR$C20B:  4C 00 C5   jmp LOADDATA(c500)  ; LOAD DATA y/x source data (length, filename)$C20E:  4C CF C4   jmp INITIALISE(C4CF); ENTRY POINT$C211:  4C DA C2   jmp label_c2da      ; LOAD 1541 sector$C214:!byte $00                        ; variable (temp? result?)$C215:!byte $00                        ; variable (track number?)$C216:!byte $00                        ; variable (sector number?); --- iec bus functions ------------------------------------------------------$C217: $C217: label_c217                      ; send byte over iec bus$C217:  58         cli$C218:  78         sei$C219:  2C 00 DD   bit $dd00         ; dd00: CIA#2: Port A, serial bus access.$C21C:  50 F9      bvc label_c217$C21E:  85 3A      sta $3a$C220:  A0 04      ldy #$04$C222: $C222: label_c222$C222:  EA         nop$C223:  EA         nop$C224:  EA         nop$C225:  A9 17      lda #$17$C227:  06 3A      asl $3a$C229:  90 02      bcc label_c22d$C22B:  A9 37      lda #$37$C22D: $C22D: label_c22d$C22D:  8D 00 DD   sta $dd00         ; dd00: CIA#2: Port A, serial bus access.$C230:  EA         nop$C231:  EA         nop$C232:  EA         nop$C233:  EA         nop$C234:  A9 07      lda #$07$C236:  06 3A      asl $3a$C238:  90 02      bcc label_c23c$C23A:  A9 27      lda #$27$C23C: $C23C: label_c23c$C23C:  8D 00 DD   sta $dd00         ; CIA#2: dd00: Port A, serial bus access.$C23F:  EA         nop$C240:  EA         nop$C241:  EA         nop$C242:  EA         nop$C243:  EA         nop$C244:  88         dey$C245:  D0 DB      bne label_c222$C247:  A9 27      lda #$27$C249:  8D 00 DD   sta $dd00         ; CIA#2: dd00: Port A, serial bus access.$C24C:  58         cli$C24D:  60         rts$C24E: $C24E: label_c24e                      ; send mode, track, sector$C24E:  AD 11 D0   lda $d011           ; Screen control register #1. Bits:$C251:  29 07      and #$07$C253:  49 07      eor #$07$C255:  85 3B      sta $3b$C257:  A9 C1      lda #$c1$C259:  85 3C      sta $3c$C25B:  A9 27      lda #$27$C25D:  8D 00 DD   sta $dd00           ; CIA#2: dd00: Port A, serial bus access.$C260:  AD 00 DD   lda $dd00           ; CIA#2: dd00: Port A, serial bus access.$C263:  4A         lsr$C264:  4A         lsr$C265:  29 03      and #$03$C267:  4D 00 DD   eor $dd00           ; CIA#2: dd00: Port A, serial bus access.$C26A:  29 0F      and #$0f$C26C:  49 FF      eor #$ff$C26E:  85 39      sta $39$C270:  A5 42      lda $42$C272:  20 17 C2   jsr label_c217$C275:  AD 15 C2   lda $c215$C278:  20 17 C2   jsr label_c217$C27B:  AD 16 C2   lda $c216$C27E:  20 17 C2   jsr label_c217$C281:  A9 C7      lda #$c7$C283:  8D 00 DD   sta $dd00           ; CIA#2: dd00: Port A, serial bus access.$C286:  60         rts$C287: $C287: label_c287                      ; iec: read byte from bus$C287:  58         cli                 ; process pending interrupts$C288:  78         sei$C289:  AC 12 D0   ldy $d012           ; Read: Current raster line (bits #0-#7). (syncronize with cpu bad lines?)$C28C:  B1 3B      lda ( $3b ), y$C28E:  F0 F7      beq label_c287$C290:  2D 00 DD   and $dd00           ; CIA#2: dd00: Port A, serial bus access.$C293:  8D 00 DD   sta $dd00           ; CIA#2: dd00: Port A, serial bus access.$C296:  09 20      ora #$20$C298:  A8         tay$C299:  EA         nop$C29A:  EA         nop$C29B:  EA         nop$C29C:  EA         nop$C29D:  AD 00 DD   lda $dd00           ; CIA#2: dd00: Port A, serial bus access.$C2A0:  4A         lsr$C2A1:  4A         lsr$C2A2:  EA         nop$C2A3:  4D 00 DD   eor $dd00           ; CIA#2: dd00: Port A, serial bus access.$C2A6:  4A         lsr$C2A7:  4A         lsr$C2A8:  EA         nop$C2A9:  4D 00 DD   eor $dd00           ; CIA#2: dd00: Port A, serial bus access.$C2AC:  4A         lsr$C2AD:  4A         lsr$C2AE:  EA         nop$C2AF:  4D 00 DD   eor $dd00           ; CIA#2: dd00: Port A, serial bus access.$C2B2:  8C 00 DD   sty $dd00           ; CIA#2: dd00: Port A, serial bus access.$C2B5:  45 39      eor $39$C2B7:  A8         tay$C2B8:  B9 00 C0   lda $c000, y        ; ? read from decoder map$C2BB:  58         cli$C2BC:  60         rts$C2BD: $C2BD: label_c2bd                      ; iec: init bus ?$C2BD:  AD 00 DD   lda $dd00           ; CIA#2: dd00: Port A, serial bus access.$C2C0:  29 0F      and #$0f$C2C2:  09 20      ora #$20$C2C4:  8D 00 DD   sta $dd00           ; CIA#2: dd00: Port A, serial bus access.$C2C7:  20 D9 C2   jsr label_c2d9$C2CA:  A9 40      lda #$40$C2CC: $C2CC: label_c2cc                      ; wait for bus$C2CC:  58         cli                 ; process pending interrupts$C2CD:  78         sei$C2CE:  2C 00 DD   bit $dd00           ; CIA#2: dd00: Port A, serial bus access.$C2D1:  F0 F9      beq label_c2cc$C2D3:  A2 14      ldx #$14$C2D5: $C2D5: label_c2d5$C2D5:  CA         dex$C2D6:  D0 FD      bne label_c2d5$C2D8:  58         cli$C2D9: $C2D9: label_c2d9$C2D9:  60         rts$C2DA: ; --- load c64 sector ------------------------------------------------------$C2DA: label_c2da                      ; load half sector ?$C2DA:  A5 01      lda $01             ; save old memory configuration$C2DC:  48         pha$C2DD:  A9 35      lda #$35            ; memory configuration: I/O area visible at $D000-$DFFF, RAM visible at $A000-$BFFF and $E000-$FFFF$C2DF:  85 01      sta $01$C2E1:  AD 15 D0   lda $d015           ; Sprite enable register. Bits:$C2E4:  48         pha$C2E5:  A9 00      lda #$00$C2E7:  8D 15 D0   sta $d015           ; Sprite enable register. Bits:$C2EA:  A5 44      lda $44             ; low address dest buffer$C2EC:  8D 33 C3   sta $c333           ; dest buffer low (read)$C2EF:  8D 0E C3   sta $c30e           ; dest buffer low (write)$C2F2:  A5 45      lda $45             ; high address dest buffer$C2F4:  8D 34 C3   sta $c334           ; dest buffer high (read)$C2F7:  8D 0F C3   sta $c30f           ; dest buffer high (write)$C2FA:  20 4E C2   jsr label_c24e      ; iec: send mode, track, sector$C2FD:  A5 42      lda $42$C2FF:  C9 03      cmp #$03            ; $C301:  F0 17      beq label_c31a      ; branch if mode == 3$C303:  C9 02      cmp #$02            ; save$C305:  D0 1F      bne label_c326      ; branch if mode != 2$C307:  A2 00      ldx #$00$C309: $C309: label_c309                      ; iec: write to disk$C309:  A0 34      ldy #$34            ; memory configuration: RAM visible in all three areas$C30B:  84 01      sty $01$C30D:  BD FF FF   lda $ffff, x$C310:  A0 35      ldy #$35            ; memory configuration: I/O area visible at $D000-$DFFF, RAM visible at $A000-$BFFF and $E000-$FFFF$C312:  84 01      sty $01$C314:  20 17 C2   jsr label_c217      ; iec: send byte$C317:  E8         inx$C318:  D0 EF      bne label_c309      ; loop 256 bytes$C31A: $C31A: label_c31a                      ; mode 3?$C31A:  20 BD C2   jsr label_c2bd      ; iec : init bus$C31D:  20 87 C2   jsr label_c287      ; iec: read byte$C320:  8D 14 C2   sta $c214           ; save iec value$C323:  4C 42 C3   jmp label_c342$C326: $C326: label_c326$C326:  20 BD C2   jsr label_c2bd      ; iec : init bus$C329:  A2 00      ldx #$00$C32B: $C32B: label_c32b                      $C32B:  20 87 C2   jsr label_c287      ; iec: read byte$C32E:  A0 34      ldy #$34            ; enable ram, no io$C330:  84 01      sty $01$C332:  9D FF FF   sta $ffff, x        ; dynamic code, store loaded value in memory$C335:  A0 35      ldy #$35            ; enable ram$C337:  84 01      sty $01$C339:  E8         inx$C33A:  D0 EF      bne label_c32b      : loop 256 bytes$C33C:  20 87 C2   jsr label_c287      ; iec: read byte (return value?): 0 on success$C33F:  8D 14 C2   sta $c214           ; save iec value$C342: $C342: label_c342$C342:  A9 C7      lda #$c7$C344:  8D 00 DD   sta $dd00           ; CIA#2: dd00: Port A, serial bus access.$C347:  68         pla$C348:  8D 15 D0   sta $d015           ; prite enable register. Bits:$C34B:  68         pla$C34C:  85 01      sta $01             ; restore memory$C34E:  AD 14 C2   lda $c214$C351:  C9 01      cmp #$01            ; ? return value: carry flag$C353:  60         rts; --- load prodos sector -------------------------------------------------$C354: $C354: LOADSECTOR(c354)                      ; LOAD SECTOR$C354:  18         clc                 ; sector + 0$C355:  20 69 C3   jsr label_c369      ; calulate c64 sector/track address$C358:  20 DA C2   jsr label_c2da      ; load c64 sector$C35B:  B0 0B      bcs label_c368      ; return value check$C35D:  38         sec                 ; sector + 1$C35E:  20 69 C3   jsr label_c369      ; calulate c64 sector/track address$C361:  E6 45      inc $45             ; high address dest buffer$C363:  20 DA C2   jsr label_c2da      ; load c64 sector$C366:  C6 45      dec $45             ; high address dest buffer$C368: $C368: label_c368$C368:  60         rts$C369: ; -$C369: label_c369                      ; calculate address of prodos sector$C369:  A5 46      lda $46$C36B:  2A         rol$C36C:  8D 16 C2   sta $c216$C36F:  A5 47      lda $47$C371:  2A         rol$C372:  8D 15 C2   sta $c215$C375:  A2 00      ldx #$00$C377: $C377: label_c377$C377:  38         sec$C378:  AD 16 C2   lda $c216$C37B:  FD B2 C3   sbc $c3b2, x$C37E:  A8         tay$C37F:  AD 15 C2   lda $c215$C382:  E9 00      sbc #$00$C384:  90 09      bcc label_c38f$C386:  E8         inx$C387:  8D 15 C2   sta $c215$C38A:  8C 16 C2   sty $c216$C38D:  B0 E8      bcs label_c377$C38F: $C38F: label_c38f$C38F:  E8         inx$C390:  E0 23      cpx #$23            ; larger than sector 35$C392:  F0 0B      beq label_c39f$C394:  E0 12      cpx #$12            ; larger than sector 18$C396:  90 01      bcc label_c399$C398:  E8         inx                 ; increase to omit track 18$C399: $C399: label_c399$C399:  8E 15 C2   stx $c215$C39C:  4C D5 C3   jmp label_c3d5$C39F: $C39F: label_c39f$C39F:  A9 12      lda #$12$C3A1:  8D 15 C2   sta $c215$C3A4:  38         sec$C3A5:  ED 16 C2   sbc $c216$C3A8:  C9 FF      cmp #$ff$C3AA:  D0 02      bne label_c3ae$C3AC:  A9 00      lda #$00$C3AE: $C3AE: label_c3ae$C3AE:  8D 16 C2   sta $c216$C3B1:  60         rts$C3B2:!byte $15,$15,$15,$15,$15,$15,$15,$15   ; track length in sectors$C3BA:!byte $15,$15,$15,$15,$15,$15,$15,$15   ; track length in sectors$C3C2:!byte $15,$13,$13,$13,$13,$13,$13,$12   ; track length in sectors (track 18 probably omited)$C3CA:!byte $12,$12,$12,$12,$12,$11,$11,$11   ; track length in sectors$C3D2:!byte $11,$11,$FF                       ; track length in sectors, last track $ff$C3D5: $C3D5: label_c3d5$C3D5:  AD 15 C2   lda $c215           ; load track number$C3D8:  A2 04      ldx #$04            ;$C3DA: $C3DA: label_c3da$C3DA:  DD F8 C3   cmp $c3f8, x$C3DD:  CA         dex$C3DE:  B0 FA      bcs label_c3da$C3E0:  8A         txa$C3E1:  0A         asl$C3E2:  AA         tax$C3E3:  BD FD C3   lda $c3fd, x$C3E6:  8D F3 C3   sta $c3f3$C3E9:  BD FE C3   lda $c3fe, x$C3EC:  8D F4 C3   sta $c3f4$C3EF:  AC 16 C2   ldy $c216$C3F2:  B9 FF FF   lda $ffff, y        ; dynamic load$C3F5:  8D 16 C2   sta $c216$C3F8:  60         rts$C3F9:!byte $24,$1F                              ; track zones end$C3FB:!byte $19,$12                              ; track zones end$C3FD:!byte $3F,$C4                              ; zone address$C3FF:!byte $2D,$C4                              ; zone address$C401:!byte $1A,$C4                              ; zone address$C403:!byte $05,$C4                              ; zone address; sector interleave table : these two sector are one prodos 512 byte sector$C405:!byte $00,$0B,$01,$0C,$02,$0D,$03,$0E,$04,$0F,$05,$10,$06,$11,$07,$12,$08,$13,$09,$14,$0A            $00,$0B,$03,$0E,$06,$11,$09,$01,$0C,$04,$0F,$07,$12,$0A,$02,$0D,$05,$10,$08            $00,$0B,$04,$0F,$08,$01,$0C,$05,$10,$09,$02,$0D,$06,$11,$0A,$03,$0E,$07,            $00,$0B,$05,$10,$0A,$04,$0F,$09,$03,$0E,$08,$02,$0D,$07,$01,$0C,$06$C450:                               ; label INIT REGISTER$C450: label_c450$C450:  A9 7F      lda #$7f$C452:  8D 0D DC   sta $dc0d         ; dd0d: CIA#1: Interrupt control and status register.$C455:  8D 0D DD   sta $dd0d         ; dd0d: CIA#2: Interrupt control and status register.$C458:  AD 0D DC   lda $dc0d         ; dd0d: CIA#1: Interrupt control and status register.$C45B:  AD 0D DD   lda $dd0d         ; dd0d: CIA#2: Interrupt control and status register.$C45E:  A2 00      ldx #$00$C460: $C460: label_c460$C460:  A9 01      lda #$01$C462:  9D 00 D8   sta $d800, x      ; Color RAM (1000 bytes, only bits #0-#3).$C465:  9D 00 D9   sta $d900, x      ; Color RAM (1000 bytes, only bits #0-#3).$C468:  9D 00 DA   sta $da00, x      ; Color RAM (1000 bytes, only bits #0-#3).$C46B:  9D 00 DB   sta $db00, x      ; Color RAM (1000 bytes, only bits #0-#3).$C46E:  A9 86      lda #$86$C470:  9D 00 04   sta $0400, x      ; Default area of screen memory (1000 bytes).$C473:  9D 00 05   sta $0500, x      ; Default area of screen memory (1000 bytes).$C476:  9D 00 06   sta $0600, x      ; Default area of screen memory (1000 bytes).$C479:  9D 00 07   sta $0700, x      ; Default area of screen memory (1000 bytes).$C47C:  E0 2E      cpx #$2e$C47E:  B0 0F      bcs label_c48f$C480:  BD A0 C4   lda $c4a0, x$C483:  9D 00 D0   sta $d000, x      ; Character ROM, shape of characters (4096 bytes). / Sprite #0 X-coordinate (only bits #0-#7).$C486:  E0 1D      cpx #$1d$C488:  B0 05      bcs label_c48f$C48A:  A9 00      lda #$00$C48C:  9D 00 D4   sta $d400, x      ; Character ROM, shape of characters (4096 bytes). / Voice #1 frequency.$C48F: $C48F: label_c48f$C48F:  E8         inx$C490:  D0 CE      bne label_c460$C492:  AD 00 DD   lda $dd00         ; dd00: CIA#2: Port A, serial bus access.$C495:  09 03      ora #$03$C497:  8D 00 DD   sta $dd00         ; dd00: CIA#2: Port A, serial bus access. VIC Bank #0, $0000-$3FFF, 0-16383.$C49A:  A9 3F      lda #$3f$C49C:  8D 02 DD   sta $dd02         ; dd02: CIA#2: Port A data direction register. Read/write $C49F:  60         rts$C4A0:!byte $00,$00,$00,$00,$00,$00,$00,$00$C4A8:!byte $00,$00,$00,$00,$00,$00,$00,$00$C4B0:!byte $00,$07,$00,$00,$00,$00,$18,$00$C4B8:!byte $18,$00,$00,$00,$00,$00,$00,$00$C4C0:!byte $00,$00,$02,$03,$04,$00,$01,$07$C4C8:!byte $08,$09,$0A,$0B,$0C,$0D,$0E$C4CF: $C4CF: INITIALISE$C4CF:  78         sei$C4D0:  20 50 C4   jsr label_c450 (INIT REGISTER)$C4D3:  A2 FF      ldx #$ff$C4D5:  9A         txs                 ; initialise stack register$C4D6:  20 2F C6   jsr label_c62f (INIT DISKLOADER)$C4D9:  A2 14      ldx #$14$C4DB: $C4DB: label_c4db$C4DB:  EC 12 D0   cpx $d012           ; Read: Current raster line (bits #0-#7).$C4DE:  D0 FB      bne label_c4db$C4E0:  CA         dex$C4E1:  D0 F8      bne label_c4db$C4E3:  A2 F2      ldx #$f2$C4E5:  A0 C4      ldy #$c4$C4E7:  20 00 C5   jsr LOADDATA(c500)$C4EA:  B0 03      bcs label_c4ef$C4EC:  4C 00 20   jmp $2000$C4EF: $C4EF: label_c4ef$C4EF:  4C EF C4   jmp label_c4ef$C4F2:!byte $0D,$C2,$C1,$D2,$C4,$B6,$B4,$AE      ; 14:BARD64.$C4FA:!byte $D3,$D9,$D3,$D4,$C5,$CD              ; SYSTEM$C500: $C500: LOADDATA(c500)$C500:  86 33      stx $33             ; initialise, load directory sector$C502:  84 34      sty $34$C504:  A9 01      lda #$01$C506:  85 42      sta $42$C508:  A9 00      lda #$00$C50A:  85 44      sta $44$C50C:  A9 BA      lda #$ba$C50E:  85 45      sta $45             ; high address dest buffer$C510:  A9 02      lda #$02$C512:  85 46      sta $46$C514:  A9 00      lda #$00$C516:  85 47      sta $47$C518: $C518: label_c518$C518:  20 22 C6   jsr LOADSECTOR_WITHCHECK(c622)$C51B:  A2 00      ldx #$00$C51D: $C51D: label_c51d                      ; check filetype and compare filename$C51D:  18         clc$C51E:  A9 00      lda #$00$C520:  7D 08 C6   adc $c608, x$C523:  85 31      sta $31$C525:  A9 BA      lda #$ba$C527:  7D 15 C6   adc $c615, x$C52A:  85 32      sta $32$C52C:  A0 00      ldy #$00$C52E:  B1 31      lda ( $31 ), y      ; filename in buffer$C530:  29 F0      and #$f0$C532:  F0 15      beq label_c549$C534:  B1 31      lda ( $31 ), y      $C536:  29 0F      and #$0f$C538:  D1 33      cmp ( $33 ), y      ; requested filename$C53A:  D0 0D      bne label_c549$C53C:  A8         tay$C53D: $C53D: label_c53d$C53D:  B1 33      lda ( $33 ), y$C53F:  51 31      eor ( $31 ), y$C541:  0A         asl$C542:  D0 05      bne label_c549$C544:  88         dey$C545:  D0 F6      bne label_c53d$C547:  F0 16      beq label_c55f$C549: $C549: label_c549$C549:  E8         inx$C54A:  E0 0D      cpx #$0d$C54C:  90 CF      bcc label_c51d$C54E:  AD 02 BA   lda $ba02$C551:  85 46      sta $46$C553:  AD 03 BA   lda $ba03$C556:  85 47      sta $47$C558:  05 46      ora $46$C55A:  D0 BC      bne label_c518$C55C:  A9 FF      lda #$ff$C55E:  60         rts$C55F: $C55F: label_c55f                      ; get fileinfo, source, size and load address$C55F:  A0 15      ldy #$15$C561:  B1 31      lda ( $31 ), y$C563:  85 37      sta $37             ; file size$C565:  C8         iny$C566:  B1 31      lda ( $31 ), y$C568:  85 38      sta $38             ; file size$C56A:  A0 1F      ldy #$1f$C56C:  B1 31      lda ( $31 ), y$C56E:  85 35      sta $35             ; load address$C570:  C8         iny$C571:  B1 31      lda ( $31 ), y$C573:  85 36      sta $36             ; load address$C575:  A0 11      ldy #$11$C577:  B1 31      lda ( $31 ), y$C579:  85 46      sta $46             ; sector$C57B:  C8         iny$C57C:  B1 31      lda ( $31 ), y$C57E:  85 47      sta $47             ; sector$C580:  A0 00      ldy #$00$C582:  B1 31      lda ( $31 ), y$C584:  29 F0      and #$f0$C586:  C9 10      cmp #$10            ; check file type (sapling vs seedling?)$C588:  F0 39      beq label_c5c3$C58A:  A9 00      lda #$00            ; prepare to load index block of sapling$C58C:  85 44      sta $44$C58E:  A9 BA      lda #$ba$C590:  85 45      sta $45             ; high address dest buffer$C592:  20 22 C6   jsr LOADSECTOR_WITHCHECK(c622)$C595:  A2 00      ldx #$00$C597:  86 30      stx $30$C599: $C599: label_c599                      ; prepare and load data sector$C599:  A6 30      ldx $30$C59B:  BD 00 BA   lda $ba00, x$C59E:  85 46      sta $46$C5A0:  BD 00 BB   lda $bb00, x$C5A3:  85 47      sta $47$C5A5:  A5 38      lda $38$C5A7:  C9 02      cmp #$02$C5A9:  90 18      bcc label_c5c3$C5AB:  A5 35      lda $35$C5AD:  85 44      sta $44$C5AF:  A5 36      lda $36$C5B1:  85 45      sta $45             ; high address dest buffer$C5B3:  20 22 C6   jsr LOADSECTOR_WITHCHECK(c622)$C5B6:  E6 36      inc $36$C5B8:  E6 36      inc $36$C5BA:  C6 38      dec $38$C5BC:  C6 38      dec $38$C5BE:  E6 30      inc $30$C5C0:  4C 99 C5   jmp label_c599      ; load next sector$C5C3: $C5C3: label_c5c3                      ; prepare and load last sector$C5C3:  A9 00      lda #$00$C5C5:  85 44      sta $44$C5C7:  A9 BC      lda #$bc$C5C9:  85 45      sta $45             ; high address dest buffer$C5CB:  20 22 C6   jsr LOADSECTOR_WITHCHECK(c622)$C5CE:  A5 35      lda $35$C5D0:  85 31      sta $31$C5D2:  A5 36      lda $36$C5D4:  85 32      sta $32$C5D6:  A0 00      ldy #$00$C5D8:  A5 38      lda $38$C5DA:  F0 1B      beq label_c5f7$C5DC: $C5DC: label_c5dc$C5DC:  B9 00 BC   lda $bc00, y        ; copy part of sector$C5DF:  91 31      sta ( $31 ), y$C5E1:  C8         iny$C5E2:  D0 F8      bne label_c5dc$C5E4:  E6 32      inc $32$C5E6:  A4 37      ldy $37$C5E8:  F0 0B      beq label_c5f5$C5EA:  88         dey$C5EB: $C5EB: label_c5eb                      ; copy part of sector$C5EB:  B9 00 BD   lda $bd00, y       $C5EE:  91 31      sta ( $31 ), y$C5F0:  88         dey$C5F1:  C0 FF      cpy #$ff$C5F3:  D0 F6      bne label_c5eb$C5F5: $C5F5: label_c5f5$C5F5:  18         clc$C5F6:  60         rts$C5F7: $C5F7: label_c5f7$C5F7:  A4 37      ldy $37$C5F9:  F0 FA      beq label_c5f5$C5FB:  88         dey$C5FC: $C5FC: label_c5fc                      ; copy part of sector$C5FC:  B9 00 BC   lda $bc00, y$C5FF:  91 31      sta ( $31 ), y$C601:  88         dey$C602:  C0 FF      cpy #$ff$C604:  D0 F6      bne label_c5fc$C606:  18         clc$C607:  60         rts$C608:!byte $04,$2B,$52,$79,$A0,$C7,$EE,$15  ; start address of filetype and filename in prodos directory header$C610:!byte $3C,$63,$8A,$B1,$D8,             ; start address of filetype and filename in prodos directory header$C615:!byte $00,$00,$00$C618:!byte $00,$00,$00,$00,$01,$01,$01,$01$C620:!byte $01,$01$C622: $C622: label_c622                      ; LOADSECTOR_WITHCHECK(c622)$C622:  20 54 C3   jsr LOADSECTOR(c354)$C625:  90 07      bcc label_c62e$C627:  A9 36      lda #$36            ; enable kernal$C629:  85 01      sta $01$C62B:  6C FC FF   jmp ( $fffc )       ; Execution address of cold reset.$C62E: $C62E: label_c62e$C62E:  60         rts$C62F: $C62F: label_c62f                      ; INIT DISKLOADER$C62F:  A9 36      lda #$36            ; enable kernal$C631:  85 01      sta $01$C633:  A9 2F      lda #$2f$C635:  85 00      sta $00$C637:  20 E7 FF   jsr $ffe7           ; (CLALL. Clear file table; call CLRCHN.)$C63A:  20 5E C6   jsr label_c65e (LOAD #)$C63D:  20 51 C6   jsr label_c651 (LOAD named file)$C640:  78         sei$C641:  A9 67      lda #$67$C643:  8D 00 DD   sta $dd00           ; dd00: CIA#2: Port A, serial bus access.$C646: $C646: label_c646$C646:  2C 00 DD   bit $dd00           ; dd00: CIA#2: Port A, serial bus access.$C649:  70 FB      bvs label_c646$C64B:  A9 C7      lda #$c7$C64D:  8D 00 DD   sta $dd00           ; dd00: CIA#2: Port A, serial bus access.$C650:  60         rts$C651:                                 ; LOAD named file$C651: label_c651$C651:  A2 72      ldx #$72$C653:  A0 C6      ldy #$c6$C655:  A9 0D      lda #$0d            ; name length 13$C657:  20 BD FF   jsr $ffbd           ; (SETNAM. Set file name parameters.)$C65A:  A9 0F      lda #$0f$C65C:  D0 0B      bne label_c669$C65E:                                 ; LOAD # (Block Execute: Channel 2, Device 0, Track 18, Sector 13)$C65E: label_c65e$C65E:  A9 01      lda #$01            ; name length$C660:  A2 7F      ldx #$7f            ; pointer$C662:  A0 C6      ldy #$c6$C664:  20 BD FF   jsr $ffbd           ; (SETNAM. Set file name parameters.)$C667:  A9 02      lda #$02$C669: $C669: label_c669$C669:  A8         tay$C66A:  A2 08      ldx #$08            ; A = Logical number(2); X = Device number(8); Y = Secondary address(2).$C66C:  20 BA FF   jsr $ffba           ; (SETLFS. Set file parameters.)$C66F:  4C C0 FF   jmp $ffc0           ; (OPEN. Open file. (Must call SETLFS and SETNAM beforehands.); auto rts$C672:!byte $42,$2D,$45,$20,$32,$20,$30,$20 ; B-E 2 0 $C67A:!byte $31,$38,$20,$31,$33,$23,$00,$00 ; 18 13#$C682:!byte $00,$00,$00,$00,$00,$00,$00,$00$C68A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C692:!byte $00,$00,$00,$00,$00,$00,$00,$00$C69A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6A2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6AA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6B2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6BA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6C2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6CA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6D2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6DA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6E2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6EA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6F2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C6FA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C702:!byte $00,$00,$00,$00,$00,$00,$00,$00$C70A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C712:!byte $00,$00,$00,$00,$00,$00,$00,$00$C71A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C722:!byte $00,$00,$00,$00,$00,$00,$00,$00$C72A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C732:!byte $00,$00,$00,$00,$00,$00,$00,$00$C73A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C742:!byte $00,$00,$00,$00,$00,$00,$00,$00$C74A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C752:!byte $00,$00,$00,$00,$00,$00,$00,$00$C75A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C762:!byte $00,$00,$00,$00,$00,$00,$00,$00$C76A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C772:!byte $00,$00,$00,$00,$00,$00,$00,$00$C77A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C782:!byte $00,$00,$00,$00,$00,$00,$00,$00$C78A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C792:!byte $00,$00,$00,$00,$00,$00,$00,$00$C79A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7A2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7AA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7B2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7BA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7C2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7CA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7D2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7DA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7E2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7EA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7F2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C7FA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C802:!byte $00,$00,$00,$00,$00,$00,$00,$00$C80A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C812:!byte $00,$00,$00,$00,$00,$00,$00,$00$C81A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C822:!byte $00,$00,$00,$00,$00,$00,$00,$00$C82A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C832:!byte $00,$00,$00,$00,$00,$00,$00,$00$C83A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C842:!byte $00,$00,$00,$00,$00,$00,$00,$00$C84A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C852:!byte $00,$00,$00,$00,$00,$00,$00,$00$C85A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C862:!byte $00,$00,$00,$00,$00,$00,$00,$00$C86A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C872:!byte $00,$00,$00,$00,$00,$00,$00,$00$C87A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C882:!byte $00,$00,$00,$00,$00,$00,$00,$00$C88A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C892:!byte $00,$00,$00,$00,$00,$00,$00,$00$C89A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8A2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8AA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8B2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8BA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8C2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8CA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8D2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8DA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8E2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8EA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8F2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C8FA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C902:!byte $00,$00,$00,$00,$00,$00,$00,$00$C90A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C912:!byte $00,$00,$00,$00,$00,$00,$00,$00$C91A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C922:!byte $00,$00,$00,$00,$00,$00,$00,$00$C92A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C932:!byte $00,$00,$00,$00,$00,$00,$00,$00$C93A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C942:!byte $00,$00,$00,$00,$00,$00,$00,$00$C94A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C952:!byte $00,$00,$00,$00,$00,$00,$00,$00$C95A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C962:!byte $00,$00,$00,$00,$00,$00,$00,$00$C96A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C972:!byte $00,$00,$00,$00,$00,$00,$00,$00$C97A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C982:!byte $00,$00,$00,$00,$00,$00,$00,$00$C98A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C992:!byte $00,$00,$00,$00,$00,$00,$00,$00$C99A:!byte $00,$00,$00,$00,$00,$00,$00,$00$C9A2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C9AA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C9B2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C9BA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C9C2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C9CA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C9D2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C9DA:!byte $00,$00,$00,$00,$00,$00,$00,$00$C9E2:!byte $00,$00,$00,$00,$00,$00,$00,$00$C9E9: